{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-document-from-prompt.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A document generation AI agent that generates a PRD, research paper, or essay from a prompt.\n *\n * - generateDocumentFromPrompt - A function that handles the document generation process.\n * - GenerateDocumentFromPromptInput - The input type for the generateDocumentFromPrompt function.\n * - GenerateDocumentFromPromptOutput - The return type for the generateDocumentFromPrompt function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateDocumentFromPromptInputSchema = z.object({\n  prompt: z.string().describe('The prompt to generate the document from.'),\n  format: z\n    .enum(['PRD', 'Research paper', 'Essay'])\n    .describe('The format of the document to generate.'),\n  prdType: z\n    .enum(['Tech', 'Non-Tech'])\n    .optional()\n    .describe('The type of PRD to generate, if the format is PRD.'),\n  topicKeywords: z.string().optional().describe('Optional topic keywords.'),\n  desiredDepth: z\n    .enum(['Quick', 'Standard', 'Deep'])\n    .describe('The desired depth of the research.'),\n  targetAudience: z.string().optional().describe('Optional target audience.'),\n  targetLength: z.string().optional().describe('Optional target length.'),\n  toneStyle: z\n    .enum(['Formal', 'Conversational', 'Academic'])\n    .describe('The tone and style of the document.'),\n  referencesStyle: z\n    .enum(['No links'])\n    .describe('The reference style of the document.'),\n});\n\nexport type GenerateDocumentFromPromptInput = z.infer<\n  typeof GenerateDocumentFromPromptInputSchema\n>;\n\nconst GenerateDocumentFromPromptOutputSchema = z.object({\n  document: z.string().describe('The generated document.'),\n  progress: z.string().describe('Progress summary of the document generation.'),\n});\n\nexport type GenerateDocumentFromPromptOutput = z.infer<\n  typeof GenerateDocumentFromPromptOutputSchema\n>;\n\nexport async function generateDocumentFromPrompt(\n  input: GenerateDocumentFromPromptInput\n): Promise<GenerateDocumentFromPromptOutput> {\n  return generateDocumentFromPromptFlow(input);\n}\n\nconst generateDocumentFromPromptFlow = ai.defineFlow(\n  {\n    name: 'generateDocumentFromPromptFlow',\n    inputSchema: GenerateDocumentFromPromptInputSchema,\n    outputSchema: GenerateDocumentFromPromptOutputSchema,\n  },\n  async input => {\n    let promptText = `You are an AI research assistant that generates documents from prompts.\n\n    The output should be clean text, without any markdown symbols like '#' or '*'. Use line breaks for structure.\n\n    Generate a document in the following format: ${input.format}.`;\n\n    if (input.prdType) {\n      promptText += `\\nThis is a ${input.prdType} PRD.`;\n      if (input.prdType === 'Tech') {\n        promptText += `\\nWhen generating a Tech PRD, ensure the document is very lengthy, well-structured, and includes a detailed \"Tech Stack\" section.`;\n      }\n    }\n\n    promptText += `\\n\\nPrompt: ${input.prompt}`;\n\n    if (input.topicKeywords) {\n      promptText += `\\nTopic Keywords: ${input.topicKeywords}`;\n    }\n\n    promptText += `\\nDesired Depth: ${input.desiredDepth}`;\n\n    if (input.targetAudience) {\n      promptText += `\\nTarget Audience: ${input.targetAudience}`;\n    }\n\n    if (input.targetLength) {\n      promptText += `\\nTarget Length: ${input.targetLength}`;\n    }\n\n    promptText += `\\nTone and Style: ${input.toneStyle}`;\n    promptText += `\\nReferences Style: ${input.referencesStyle}`;\n    promptText += `\\n\\nThe document should be well-structured and easy to read.`;\n    promptText += `\\n\\nInclude a short, one-sentence summary of what you have generated to the 'progress' field in the output.`;\n\n\n    const {output} = await ai.generate({\n      prompt: promptText,\n      output: { schema: GenerateDocumentFromPromptOutputSchema },\n    });\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,wCAAwC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,QAAQ,uIAAA,CAAA,IAAC,CACN,IAAI,CAAC;QAAC;QAAO;QAAkB;KAAQ,EACvC,QAAQ,CAAC;IACZ,SAAS,uIAAA,CAAA,IAAC,CACP,IAAI,CAAC;QAAC;QAAQ;KAAW,EACzB,QAAQ,GACR,QAAQ,CAAC;IACZ,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,cAAc,uIAAA,CAAA,IAAC,CACZ,IAAI,CAAC;QAAC;QAAS;QAAY;KAAO,EAClC,QAAQ,CAAC;IACZ,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC/C,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC7C,WAAW,uIAAA,CAAA,IAAC,CACT,IAAI,CAAC;QAAC;QAAU;QAAkB;KAAW,EAC7C,QAAQ,CAAC;IACZ,iBAAiB,uIAAA,CAAA,IAAC,CACf,IAAI,CAAC;QAAC;KAAW,EACjB,QAAQ,CAAC;AACd;AAMA,MAAM,yCAAyC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtD,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAMO,eAAe,2BACpB,KAAsC;IAEtC,OAAO,+BAA+B;AACxC;AAEA,MAAM,iCAAiC,mHAAA,CAAA,KAAE,CAAC,UAAU,CAClD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,IAAI,aAAa,CAAC;;;;iDAI2B,EAAE,MAAM,MAAM,CAAC,CAAC,CAAC;IAE9D,IAAI,MAAM,OAAO,EAAE;QACjB,cAAc,CAAC,YAAY,EAAE,MAAM,OAAO,CAAC,KAAK,CAAC;QACjD,IAAI,MAAM,OAAO,KAAK,QAAQ;YAC5B,cAAc,CAAC,iIAAiI,CAAC;QACnJ;IACF;IAEA,cAAc,CAAC,YAAY,EAAE,MAAM,MAAM,EAAE;IAE3C,IAAI,MAAM,aAAa,EAAE;QACvB,cAAc,CAAC,kBAAkB,EAAE,MAAM,aAAa,EAAE;IAC1D;IAEA,cAAc,CAAC,iBAAiB,EAAE,MAAM,YAAY,EAAE;IAEtD,IAAI,MAAM,cAAc,EAAE;QACxB,cAAc,CAAC,mBAAmB,EAAE,MAAM,cAAc,EAAE;IAC5D;IAEA,IAAI,MAAM,YAAY,EAAE;QACtB,cAAc,CAAC,iBAAiB,EAAE,MAAM,YAAY,EAAE;IACxD;IAEA,cAAc,CAAC,kBAAkB,EAAE,MAAM,SAAS,EAAE;IACpD,cAAc,CAAC,oBAAoB,EAAE,MAAM,eAAe,EAAE;IAC5D,cAAc,CAAC,4DAA4D,CAAC;IAC5E,cAAc,CAAC,2GAA2G,CAAC;IAG3H,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QACjC,QAAQ;QACR,QAAQ;YAAE,QAAQ;QAAuC;IAC3D;IACA,OAAO;AACT;;;IArDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/config.ts"],"sourcesContent":["export const firebaseConfig = {\n  \"projectId\": \"studio-430250886-afaff\",\n  \"appId\": \"1:182313377017:web:37c2cc9b4faf796bd29628\",\n  \"apiKey\": \"AIzaSyCiemo78XLrRVMXY7bXDu6Ok6IzxPOqFUA\",\n  \"authDomain\": \"studio-430250886-afaff.firebaseapp.com\",\n  \"measurementId\": \"\",\n  \"messagingSenderId\": \"182313377017\"\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB;IAC5B,aAAa;IACb,SAAS;IACT,UAAU;IACV,cAAc;IACd,iBAAiB;IACjB,qBAAqB;AACvB","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/firebase/index.server.ts"],"sourcesContent":["import { initializeApp, getApp, getApps, FirebaseApp } from 'firebase-admin/app';\nimport { getAuth } from 'firebase-admin/auth';\nimport { getFirestore } from 'firebase-admin/firestore';\nimport { firebaseConfig } from './config';\n\n// Ensure you have the service account JSON file path in your environment variables\nconst serviceAccount = process.env.FIREBASE_SERVICE_ACCOUNT\n  ? JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT)\n  : undefined;\n\nlet firebaseApp: FirebaseApp;\nlet auth: ReturnType<typeof getAuth>;\nlet firestore: ReturnType<typeof getFirestore>;\n\nif (!getApps().length) {\n  if (serviceAccount) {\n    initializeApp({\n      credential: {\n        projectId: serviceAccount.project_id,\n        clientEmail: serviceAccount.client_email,\n        privateKey: serviceAccount.private_key,\n      },\n      databaseURL: `https://${firebaseConfig.projectId}.firebaseio.com`,\n    });\n  } else {\n    // This is for client-side Firebase, which will not work in server components\n    // A fallback or different configuration might be needed depending on the use case.\n    // For server-side rendering with admin privileges, service account is necessary.\n    console.warn(\"Firebase Admin SDK not initialized. Service account credentials not found.\");\n  }\n} \n\nfirebaseApp = getApp();\nauth = getAuth(firebaseApp);\nfirestore = getFirestore(firebaseApp);\n\n\nexport function initializeFirebase() {\n    return { firebaseApp, auth, firestore };\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AAEA,mFAAmF;AACnF,MAAM,iBAAiB,QAAQ,GAAG,CAAC,wBAAwB,GACvD,KAAK,KAAK,CAAC,QAAQ,GAAG,CAAC,wBAAwB,IAC/C;AAEJ,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,IAAI,gBAAgB;QAClB,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD,EAAE;YACZ,YAAY;gBACV,WAAW,eAAe,UAAU;gBACpC,aAAa,eAAe,YAAY;gBACxC,YAAY,eAAe,WAAW;YACxC;YACA,aAAa,CAAC,QAAQ,EAAE,yHAAA,CAAA,iBAAc,CAAC,SAAS,CAAC,eAAe,CAAC;QACnE;IACF,OAAO;QACL,6EAA6E;QAC7E,mFAAmF;QACnF,iFAAiF;QACjF,QAAQ,IAAI,CAAC;IACf;AACF;AAEA,cAAc,CAAA,GAAA,gJAAA,CAAA,SAAM,AAAD;AACnB,OAAO,CAAA,GAAA,kJAAA,CAAA,UAAO,AAAD,EAAE;AACf,YAAY,CAAA,GAAA,4JAAA,CAAA,eAAY,AAAD,EAAE;AAGlB,SAAS;IACZ,OAAO;QAAE;QAAa;QAAM;IAAU;AAC1C","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  generateDocumentFromPrompt,\n  type GenerateDocumentFromPromptInput,\n  type GenerateDocumentFromPromptOutput,\n} from \"@/ai/flows/generate-document-from-prompt\";\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport { initializeFirebase } from \"@/firebase/index.server\";\n\ntype HandleGenerationInput = {\n  values: GenerateDocumentFromPromptInput;\n  userId: string;\n}\n\nexport async function handleGeneration(\n  input: HandleGenerationInput\n): Promise<{ success: boolean; data?: GenerateDocumentFromPromptOutput, error?: string }> {\n  try {\n    const { values, userId } = input;\n    // Add a slight delay to allow progress indicators to show\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const result = await generateDocumentFromPrompt(values);\n\n    // Save prompt to Firestore after successful generation\n    if (result) {\n      const { firestore } = initializeFirebase();\n      const promptsRef = collection(firestore, 'users', userId, 'prompts');\n      await addDoc(promptsRef, {\n        ...values,\n        createdAt: serverTimestamp(),\n        userId: userId,\n      });\n    }\n\n    return { success: true, data: result };\n  } catch (error) {\n    console.error(error);\n    const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred.\";\n    return { success: false, error: `Failed to generate document: ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;AAKA;AAAA;AACA;;;;;;;;;;;AAOO,eAAe,iBACpB,KAA4B;IAE5B,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG;QAC3B,0DAA0D;QAC1D,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACjD,MAAM,SAAS,MAAM,CAAA,GAAA,4JAAA,CAAA,6BAA0B,AAAD,EAAE;QAEhD,uDAAuD;QACvD,IAAI,QAAQ;YACV,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,qBAAkB,AAAD;YACvC,MAAM,aAAa,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,WAAW,SAAS,QAAQ;YAC1D,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,YAAY;gBACvB,GAAG,MAAM;gBACT,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;gBACzB,QAAQ;YACV;QACF;QAEA,OAAO;YAAE,SAAS;YAAM,MAAM;QAAO;IACvC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO;YAAE,SAAS;YAAO,OAAO,CAAC,6BAA6B,EAAE,cAAc;QAAC;IACjF;AACF;;;IA1BsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {handleGeneration as '40161bee18a8da79c483ca285b5be32b8a62bb904e'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}