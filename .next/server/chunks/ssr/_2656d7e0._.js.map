{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/PROJECTS/ai%20projects/scientisto/Scientisto-/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///E:/PROJECTS/ai%20projects/scientisto/Scientisto-/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///E:/PROJECTS/ai%20projects/scientisto/Scientisto-/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\r\n\r\nfunction Skeleton({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div\r\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Skeleton }\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///E:/PROJECTS/ai%20projects/scientisto/Scientisto-/src/app/dashboard/account/page.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useUser, useAuth } from '@/firebase';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { useState, useEffect } from 'react';\r\nimport { updateProfile, updateEmail, updatePassword, reauthenticateWithCredential, EmailAuthProvider } from 'firebase/auth';\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\n\r\n// Function to generate a simple hash code from a string\r\nconst getHashCode = (str: string) => {\r\n  let hash = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    const char = str.charCodeAt(i);\r\n    hash = (hash << 5) - hash + char;\r\n    hash = hash & hash; // Convert to 32bit integer\r\n  }\r\n  return hash;\r\n};\r\n\r\n// Function to generate a color from a string\r\nconst stringToColor = (str: string) => {\r\n  const hash = getHashCode(str);\r\n  let color = '#';\r\n  for (let i = 0; i < 3; i++) {\r\n    const value = (hash >> (i * 8)) & 0xFF;\r\n    color += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return color;\r\n};\r\n\r\nexport default function AccountPage() {\r\n  const { user, isUserLoading } = useUser();\r\n  const auth = useAuth();\r\n  const { toast } = useToast();\r\n\r\n  const [displayName, setDisplayName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    if(user) {\r\n      setDisplayName(user.displayName || '');\r\n      setEmail(user.email || '');\r\n    }\r\n  }, [user]);\r\n\r\n  const getInitials = (name?: string | null) => {\r\n    if (!name) return 'U';\r\n    const names = name.split(' ');\r\n    if (names.length > 1) {\r\n      return `${names[0][0]}${names[names.length - 1][0]}`.toUpperCase();\r\n    }\r\n    return name.substring(0, 2).toUpperCase();\r\n  };\r\n  \r\n  const fallbackColor = user?.email ? stringToColor(user.email) : '#cccccc';\r\n\r\n  const handleProfileUpdate = async () => {\r\n    if (!user) return;\r\n    setIsUpdating(true);\r\n\r\n    try {\r\n      if (displayName !== user.displayName) {\r\n        await updateProfile(user, { displayName });\r\n        toast({ title: \"Success\", description: \"Your name has been updated.\" });\r\n      }\r\n    } catch (error: any) {\r\n      toast({ variant: 'destructive', title: \"Error\", description: `Failed to update name: ${error.message}` });\r\n    }\r\n\r\n    setIsUpdating(false);\r\n  };\r\n\r\n  const handleSensitiveUpdate = async (updateAction: () => Promise<void>) => {\r\n    if (!user || !user.email || !currentPassword) {\r\n        toast({ variant: 'destructive', title: \"Error\", description: \"Please enter your current password to make sensitive changes.\" });\r\n        return;\r\n    }\r\n    setIsUpdating(true);\r\n    \r\n    const credential = EmailAuthProvider.credential(user.email, currentPassword);\r\n\r\n    try {\r\n        await reauthenticateWithCredential(user, credential);\r\n        await updateAction();\r\n    } catch (error: any) {\r\n        toast({ variant: 'destructive', title: \"Authentication Failed\", description: \"Incorrect password. Please try again.\" });\r\n    } finally {\r\n        setIsUpdating(false);\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n  };\r\n\r\n  const handleEmailUpdate = () => {\r\n    if (!user) return;\r\n     handleSensitiveUpdate(async () => {\r\n        await updateEmail(user, email);\r\n        toast({ title: \"Success\", description: \"Your email has been updated. Please check your new email for verification.\" });\r\n     });\r\n  };\r\n\r\n  const handlePasswordUpdate = () => {\r\n    if (!user) return;\r\n    if (newPassword !== confirmPassword) {\r\n      toast({ variant: 'destructive', title: \"Error\", description: \"New passwords do not match.\" });\r\n      return;\r\n    }\r\n    if (newPassword.length < 6) {\r\n        toast({ variant: 'destructive', title: \"Error\", description: \"Password must be at least 6 characters long.\" });\r\n        return;\r\n    }\r\n    handleSensitiveUpdate(async () => {\r\n        await updatePassword(user, newPassword);\r\n        toast({ title: \"Success\", description: \"Your password has been updated.\" });\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-bold tracking-tight font-headline\">Account Settings</h1>\r\n        <p className=\"text-muted-foreground\">\r\n          Manage your profile, email, password, and other account settings.\r\n        </p>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center gap-4\">\r\n            {isUserLoading ? (\r\n              <Skeleton className=\"h-20 w-20 rounded-full\" />\r\n            ) : (\r\n              <Avatar className=\"h-20 w-20\">\r\n                <AvatarImage src={user?.photoURL || ''} alt={user?.displayName || ''} />\r\n                <AvatarFallback style={{ backgroundColor: fallbackColor, fontSize: '2rem' }}>\r\n                  {getInitials(user?.displayName)}\r\n                </AvatarFallback>\r\n              </Avatar>\r\n            )}\r\n            <div className=\"flex-1\">\r\n              <CardTitle>Profile Details</CardTitle>\r\n              <CardDescription>Update your personal information.</CardDescription>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"name\">Name</Label>\r\n            {isUserLoading ? (\r\n              <Skeleton className=\"h-10 w-full\" />\r\n            ) : (\r\n              <Input id=\"name\" value={displayName} onChange={(e) => setDisplayName(e.target.value)} disabled={isUpdating} />\r\n            )}\r\n          </div>\r\n          <Button onClick={handleProfileUpdate} disabled={isUpdating}>\r\n            {isUpdating ? 'Updating...' : 'Update Name'}\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n      \r\n      <Card>\r\n        <CardHeader>\r\n            <CardTitle>Email Address</CardTitle>\r\n            <CardDescription>Change the email address associated with your account.</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n            <div className=\"space-y-2\">\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                {isUserLoading ? <Skeleton className=\"h-10 w-full\" /> : <Input id=\"email\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} disabled={isUpdating} />}\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n                <Label htmlFor=\"currentPasswordEmail\">Current Password</Label>\r\n                <Input id=\"currentPasswordEmail\" type=\"password\" value={currentPassword} onChange={(e) => setCurrentPassword(e.target.value)} placeholder=\"Enter current password to change email\" disabled={isUpdating} />\r\n            </div>\r\n            <Button onClick={handleEmailUpdate} disabled={isUpdating}>{isUpdating ? 'Updating...' : 'Update Email'}</Button>\r\n        </CardContent>\r\n      </Card>\r\n      \r\n      <Card>\r\n        <CardHeader>\r\n            <CardTitle>Password</CardTitle>\r\n            <CardDescription>Change your account password.</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n            <div className=\"space-y-2\">\r\n                <Label htmlFor=\"currentPassword\">Current Password</Label>\r\n                <Input id=\"currentPassword\" type=\"password\" value={currentPassword} onChange={(e) => setCurrentPassword(e.target.value)} placeholder=\"Enter current password\" disabled={isUpdating}/>\r\n            </div>\r\n            <div className=\"grid md:grid-cols-2 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"newPassword\">New Password</Label>\r\n                    <Input id=\"newPassword\" type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} disabled={isUpdating}/>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"confirmPassword\">Confirm New Password</Label>\r\n                    <Input id=\"confirmPassword\" type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} disabled={isUpdating}/>\r\n                </div>\r\n            </div>\r\n            <Button onClick={handlePasswordUpdate} disabled={isUpdating}>{isUpdating ? 'Updating...' : 'Update Password'}</Button>\r\n        </CardContent>\r\n      </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAXA;;;;;;;;;;;;AAaA,wDAAwD;AACxD,MAAM,cAAc,CAAC;IACnB,IAAI,OAAO;IACX,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;QACnC,MAAM,OAAO,IAAI,UAAU,CAAC;QAC5B,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO;QAC5B,OAAO,OAAO,MAAM,2BAA2B;IACjD;IACA,OAAO;AACT;AAEA,6CAA6C;AAC7C,MAAM,gBAAgB,CAAC;IACrB,MAAM,OAAO,YAAY;IACzB,IAAI,QAAQ;IACZ,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;QAC1B,MAAM,QAAQ,AAAC,QAAS,IAAI,IAAM;QAClC,SAAS,CAAC,OAAO,MAAM,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC/C;IACA,OAAO;AACT;AAEe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,UAAO,AAAD;IACtC,MAAM,OAAO,CAAA,GAAA,4HAAA,CAAA,UAAO,AAAD;IACnB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAG,MAAM;YACP,eAAe,KAAK,WAAW,IAAI;YACnC,SAAS,KAAK,KAAK,IAAI;QACzB;IACF,GAAG;QAAC;KAAK;IAET,MAAM,cAAc,CAAC;QACnB,IAAI,CAAC,MAAM,OAAO;QAClB,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,IAAI,MAAM,MAAM,GAAG,GAAG;YACpB,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,WAAW;QAClE;QACA,OAAO,KAAK,SAAS,CAAC,GAAG,GAAG,WAAW;IACzC;IAEA,MAAM,gBAAgB,MAAM,QAAQ,cAAc,KAAK,KAAK,IAAI;IAEhE,MAAM,sBAAsB;QAC1B,IAAI,CAAC,MAAM;QACX,cAAc;QAEd,IAAI;YACF,IAAI,gBAAgB,KAAK,WAAW,EAAE;gBACpC,MAAM,CAAA,GAAA,gPAAA,CAAA,gBAAa,AAAD,EAAE,MAAM;oBAAE;gBAAY;gBACxC,MAAM;oBAAE,OAAO;oBAAW,aAAa;gBAA8B;YACvE;QACF,EAAE,OAAO,OAAY;YACnB,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAAS,aAAa,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;YAAC;QACzG;QAEA,cAAc;IAChB;IAEA,MAAM,wBAAwB,OAAO;QACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,CAAC,iBAAiB;YAC1C,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAAS,aAAa;YAAgE;YAC7H;QACJ;QACA,cAAc;QAEd,MAAM,aAAa,mPAAA,CAAA,oBAAiB,CAAC,UAAU,CAAC,KAAK,KAAK,EAAE;QAE5D,IAAI;YACA,MAAM,CAAA,GAAA,+PAAA,CAAA,+BAA4B,AAAD,EAAE,MAAM;YACzC,MAAM;QACV,EAAE,OAAO,OAAY;YACjB,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAAyB,aAAa;YAAwC;QACzH,SAAU;YACN,cAAc;YACd,mBAAmB;YACnB,eAAe;YACf,mBAAmB;QACvB;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI,CAAC,MAAM;QACV,sBAAsB;YACnB,MAAM,CAAA,GAAA,8OAAA,CAAA,cAAW,AAAD,EAAE,MAAM;YACxB,MAAM;gBAAE,OAAO;gBAAW,aAAa;YAA6E;QACvH;IACH;IAEA,MAAM,uBAAuB;QAC3B,IAAI,CAAC,MAAM;QACX,IAAI,gBAAgB,iBAAiB;YACnC,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAAS,aAAa;YAA8B;YAC3F;QACF;QACA,IAAI,YAAY,MAAM,GAAG,GAAG;YACxB,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAAS,aAAa;YAA+C;YAC5G;QACJ;QACA,sBAAsB;YAClB,MAAM,CAAA,GAAA,iPAAA,CAAA,iBAAc,AAAD,EAAE,MAAM;YAC3B,MAAM;gBAAE,OAAO;gBAAW,aAAa;YAAkC;QAC7E;IACF;IAGA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAkD;;;;;;kCAChE,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAKvC,8OAAC,gIAAA,CAAA,OAAI;;kCACH,8OAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,8OAAC;4BAAI,WAAU;;gCACZ,8BACC,8OAAC,oIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;yDAEpB,8OAAC,kIAAA,CAAA,SAAM;oCAAC,WAAU;;sDAChB,8OAAC,kIAAA,CAAA,cAAW;4CAAC,KAAK,MAAM,YAAY;4CAAI,KAAK,MAAM,eAAe;;;;;;sDAClE,8OAAC,kIAAA,CAAA,iBAAc;4CAAC,OAAO;gDAAE,iBAAiB;gDAAe,UAAU;4CAAO;sDACvE,YAAY,MAAM;;;;;;;;;;;;8CAIzB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,gIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,gIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;;;;;;;;;;;;kCAIvB,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAO;;;;;;oCACrB,8BACC,8OAAC,oIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;6DAEpB,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAO,OAAO;wCAAa,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wCAAG,UAAU;;;;;;;;;;;;0CAGpG,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAqB,UAAU;0CAC7C,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;0BAKpC,8OAAC,gIAAA,CAAA,OAAI;;kCACH,8OAAC,gIAAA,CAAA,aAAU;;0CACP,8OAAC,gIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,8OAAC,gIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAErB,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACnB,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAQ;;;;;;oCACtB,8BAAgB,8OAAC,oIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;6DAAmB,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAQ,MAAK;wCAAQ,OAAO;wCAAO,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wCAAG,UAAU;;;;;;;;;;;;0CAE9J,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAuB;;;;;;kDACtC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAuB,MAAK;wCAAW,OAAO;wCAAiB,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;wCAAG,aAAY;wCAAyC,UAAU;;;;;;;;;;;;0CAEjM,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAmB,UAAU;0CAAa,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;0BAI9F,8OAAC,gIAAA,CAAA,OAAI;;kCACH,8OAAC,gIAAA,CAAA,aAAU;;0CACP,8OAAC,gIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,8OAAC,gIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAErB,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACnB,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,iIAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAkB;;;;;;kDACjC,8OAAC,iIAAA,CAAA,QAAK;wCAAC,IAAG;wCAAkB,MAAK;wCAAW,OAAO;wCAAiB,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;wCAAG,aAAY;wCAAyB,UAAU;;;;;;;;;;;;0CAE5K,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAI,WAAU;;0DACX,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAc;;;;;;0DAC7B,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAc,MAAK;gDAAW,OAAO;gDAAa,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gDAAG,UAAU;;;;;;;;;;;;kDAE3H,8OAAC;wCAAI,WAAU;;0DACX,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAkB;;;;;;0DACjC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAkB,MAAK;gDAAW,OAAO;gDAAiB,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;gDAAG,UAAU;;;;;;;;;;;;;;;;;;0CAG3I,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAsB,UAAU;0CAAa,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;AAMvG","debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///E:/PROJECTS/ai%20projects/scientisto/Scientisto-/node_modules/%40radix-ui/react-label/src/label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AACvB,SAAS,iBAAiB;AActB;;;;;AARJ,IAAM,OAAO;AAMb,IAAM,kNAAc,aAAA,EAAqC,CAAC,OAAO,iBAAiB;IAChF,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,wKAAC,YAAA,CAAU,KAAA,EAAV;QACE,GAAG,KAAA;QACJ,KAAK;QACL,aAAa,CAAC,UAAU;YAEtB,MAAM,SAAS,MAAM,MAAA;YACrB,IAAI,OAAO,OAAA,CAAQ,iCAAiC,EAAG,CAAA;YAEvD,MAAM,WAAA,GAAc,KAAK;YAEzB,IAAI,CAAC,MAAM,gBAAA,IAAoB,MAAM,MAAA,GAAS,EAAG,CAAA,MAAM,cAAA,CAAe;QACxE;IAAA;AAGN,CAAC;AAED,MAAM,WAAA,GAAc;AAIpB,IAAM,OAAO","ignoreList":[0],"debugId":null}}]
}